{"version":3,"sources":["extensions/lvCommandSet/LvCommandSetCommandSet.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EACL,sBAAsB,EAIvB,MAAM,sCAAsC,CAAC;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAe9C,IAAM,UAAU,GAAW,wBAAwB,CAAC;AAEpD;IAAoD,0CAAyD;IAA7G;;IA+BA,CAAC;IA5BQ,uCAAM,GAAb;QACE,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,oCAAoC,CAAC,CAAC;QAC3D,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAGM,kDAAiB,GAAxB,UAAyB,KAAmD;QAC1E,IAAM,iBAAiB,GAAY,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,oEAAoE;YACpE,iBAAiB,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAGM,0CAAS,GAAhB,UAAiB,KAAgD;QAC/D,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACrB,KAAK,WAAW;gBACd,IAAI,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAChE,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,IAAI,CAAC,UAAU,CAAC,aAAa,GAAE,kCAAkC,GAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,GAAC,GAAG,CAAC;gBACvK,KAAK,CAAC;YACR,KAAK,WAAW;gBACX,MAAM,CAAC,KAAK,CAAC,KAAG,IAAI,CAAC,UAAU,CAAC,aAAe,CAAC,CAAC;gBACpD,KAAK,CAAC;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IA3BD;QADC,QAAQ;wDAIR;IAGD;QADC,QAAQ;mEAOR;IAGD;QADC,QAAQ;2DAaR;IACH,6BAAC;CA/BD,AA+BC,CA/BmD,sBAAsB,GA+BzE;eA/BoB,sBAAsB","file":"LvCommandSetCommandSet.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport { Log } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseListViewCommandSet,\r\n  Command,\r\n  IListViewCommandSetListViewUpdatedParameters,\r\n  IListViewCommandSetExecuteEventParameters\r\n} from '@microsoft/sp-listview-extensibility';\r\nimport { Dialog } from '@microsoft/sp-dialog';\r\n\r\nimport * as strings from 'LvCommandSetCommandSetStrings';\r\n\r\n/**\r\n * If your command set uses the ClientSideComponentProperties JSON input,\r\n * it will be deserialized into the BaseExtension.properties object.\r\n * You can define an interface to describe it.\r\n */\r\nexport interface ILvCommandSetCommandSetProperties {\r\n  // This is an example; replace with your own properties\r\n  ReminderEmail: string;\r\n  sampleTextTwo: string;\r\n}\r\n\r\nconst LOG_SOURCE: string = 'LvCommandSetCommandSet';\r\n\r\nexport default class LvCommandSetCommandSet extends BaseListViewCommandSet<ILvCommandSetCommandSetProperties> {\r\n\r\n  @override\r\n  public onInit(): Promise<void> {\r\n    Log.info(LOG_SOURCE, 'Initialized LvCommandSetCommandSet');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  @override\r\n  public onListViewUpdated(event: IListViewCommandSetListViewUpdatedParameters): void {\r\n    const compareOneCommand: Command = this.tryGetCommand('COMMAND_1');\r\n    if (compareOneCommand) {\r\n      // This command should be hidden unless exactly one row is selected.\r\n      compareOneCommand.visible = event.selectedRows.length === 1;\r\n    }\r\n  }\r\n\r\n  @override\r\n  public onExecute(event: IListViewCommandSetExecuteEventParameters): void {\r\n    switch (event.itemId) {\r\n      case 'COMMAND_1':\r\n        var d = event.selectedRows[0].getValueByName('Author')[0].email;\r\n        window.location.href = \"mailto:\"+ d +\"?subject=\"+ this.properties.ReminderEmail +\"&body=this is Remaider mail for \"+ event.selectedRows[0].getValueByName('Title')+\" \";\r\n        break;\r\n      case 'COMMAND_2':\r\n           Dialog.alert(`${this.properties.sampleTextTwo}`);\r\n        break;\r\n      default:\r\n        throw new Error('Unknown command');\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"../../../../../src"}